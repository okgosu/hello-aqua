swagger: "2.0"
info:
  version: "0.4.0"
  title: Hello Aqua APIs
  description: APIs for aqua world; ligth, cam, temperature, feeding control
# during dev, should point to your local machine
host: okgosu.synology.me
# basePath prefixes all resource paths
basePath: /
securityDefinitions:
  api_key:
    type: apiKey
    in: query
    name: api_key
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:

  /aqua/light/:
    x-swagger-router-controller: aqua_control
    get:
      description: Returns 'aqua light list'
      operationId: aqua_light_list
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AquaLightList"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      security:
        - api_key: [  ]
      description: 'Turn on or off aqua light'
      operationId: aqua_light_post
      parameters:
        - name: operation
          in: body
          description: on / off
          required: true
          schema:
            $ref: "#/definitions/AquaLightOperation"
      responses:
        "200":
          description: "success / fail"
          schema:
            $ref: "#/definitions/AquaOperationResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /aqua/light/{id}:
    x-swagger-router-controller: aqua_control
    get:
      description: Returns 'aqua light status'
      operationId: aqua_light_get
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AquaLight"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /aqua/cam:
    x-swagger-router-controller: aqua_control
    get:
      description: Returns 'aqua cam on/off status'
      operationId: aqua_cam
      responses:
        "200":
          description: "on / off"
          schema:
            $ref: "#/definitions/AquaOnOffResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: 'Turn on or off aqua cam'
      operationId: aqua_cam_post
      security:
      - api_key: [  ]
      parameters:
        - name: operation
          in: body
          description: on / off
          required: true
          schema:
            $ref: "#/definitions/AquaCamOperation"
      responses:
        "200":
          description: "success / fail"
          schema:
            $ref: "#/definitions/AquaOperationResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /aqua/cam/image:
    x-swagger-router-controller: aqua_control
    get:
      description: Returns 'aqua cam still image'
      produces:  
         - image/jpeg
         - application/json
         - application/x-yaml
      operationId: aqua_cam_image
      responses:
        "200":
          description: "still image"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /aqua/cam/stream:
    x-swagger-router-controller: aqua_control
    get:
      description: Returns 'aqua cam stream'
      operationId: aqua_cam_stream
      produces:
        - application/octet-stream
      responses:
        "200":
          description: "still image"
          schema:
            $ref: "#/definitions/AquaCamBinaryResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /aqua/temperature:
    x-swagger-router-controller: aqua_control
    get:
      description: Returns 'this aqua temperature'
      operationId: aqua_temp
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TemperatureResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw

definitions:
  AquaLightList:
    required:
      - aqualights
    properties:
      aqualights:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            status:
              type: string
              description: on / off
            description:
              type: string
  AquaLight:
    type: object
    properties:
      id:
        type: string
      status:
        type: string
        description: on / off
      description:
        type: string
  AquaLightOperation:
    type: object
    properties:
      id:
        type: string
        description: device number
      operation:
        type: string
        description: on / off
  AquaCamOperation:
    type: object
    properties:
      id:
        type: string
        description: device number
      operation:
        type: string
        description: on / off
  AquaOperationResponse:
    type: object
    properties:
      deviceId:
        type: string
      deviceStatus:
        type: string
      operationresult:
        type: string
  AquaOnOffResponse:
    required:
      - onoffstatus
    properties:
      onoffstatus:
        type: string
  AquaCamBinaryResponse:
    type: object
  TemperatureResponse:
    required:
      - temperature
    properties:
      temperature:
        type: string
  ErrorResponse:
    required:
      - errorcode
      - errormessage
    properties:
      errorcode:
        type: integer
        format: int32
      errormessage:
        type: string
